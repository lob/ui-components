name: Lint and Test

# Run this when someone pushes a branch
on: [push]

jobs:
  # Get the versions of node and npm as defined in the package.json engines
  get-versions:
    runs-on: ubuntu-latest

    outputs:
      node_version: ${{ steps.node_version.outputs.prop }}
      npm_version: ${{ steps.npm_version.outputs.prop }}

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Read node version from package.json
      id: node_version
      uses: notiz-dev/github-action-json-property@v0.1.0
      with:
        path: "package.json"
        prop_path: "engines.node"

    - run: |
        echo "Node version found: ${{ steps.node_version.outputs.prop }}"

    - name: Read npm version from package.json
      id: npm_version
      uses: notiz-dev/github-action-json-property@v0.1.0
      with:
        path: "package.json"
        prop_path: "engines.npm"

    - run: |
        echo "npm version found: ${{ steps.npm_version.outputs.prop }}"

  # Run lint and tests
  run-tests:
    runs-on: ubuntu-latest

    needs: get-versions

    env:
      NODE_VERSION: ${{ needs.get-versions.outputs.node_version }}
      NPM_VERSION: ${{ needs.get-versions.outputs.npm_version }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      # Setup node with the version defined in package.json engines.
      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Setup npm with the version defined in package.json engines.
      - name: Use npm ${{ env.NPM_VERSION }}
        run: |
          npm install -g npm@${{ env.NPM_VERSION }}

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run lint
        run: npm run lint

      - name: Run unit tests
        run: npm run test:ci
